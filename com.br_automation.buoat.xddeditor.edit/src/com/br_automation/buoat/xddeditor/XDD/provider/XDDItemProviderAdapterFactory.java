/**
 */
package com.br_automation.buoat.xddeditor.XDD.provider;

import java.util.ArrayList;
import java.util.Collection;

import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.Notifier;

import org.eclipse.emf.edit.provider.ChangeNotifier;
import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;
import org.eclipse.emf.edit.provider.ComposedAdapterFactory;
import org.eclipse.emf.edit.provider.IChangeNotifier;
import org.eclipse.emf.edit.provider.IDisposable;
import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;
import org.eclipse.emf.edit.provider.IItemLabelProvider;
import org.eclipse.emf.edit.provider.IItemPropertySource;
import org.eclipse.emf.edit.provider.INotifyChangedListener;
import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;
import org.eclipse.emf.edit.provider.ITreeItemContentProvider;

import com.br_automation.buoat.xddeditor.XDD.util.XDDAdapterFactory;

/**
 * This is the factory that is used to provide the interfaces needed to support Viewers.
 * The adapters generated by this factory convert EMF adapter notifications into calls to {@link #fireNotifyChanged fireNotifyChanged}.
 * The adapters also support Eclipse property sheets.
 * Note that most of the adapters are shared among multiple instances.
 * <!-- begin-user-doc -->
 * <!-- end-user-doc -->
 * @generated
 */
public class XDDItemProviderAdapterFactory extends XDDAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
	/**
	 * This keeps track of the root adapter factory that delegates to this adapter factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ComposedAdapterFactory parentAdapterFactory;

	/**
	 * This is used to implement {@link org.eclipse.emf.edit.provider.IChangeNotifier}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IChangeNotifier changeNotifier = new ChangeNotifier();

	/**
	 * This keeps track of all the supported types checked by {@link #isFactoryForType isFactoryForType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Collection<Object> supportedTypes = new ArrayList<Object>();

	/**
	 * This constructs an instance.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public XDDItemProviderAdapterFactory() {
		supportedTypes.add(IEditingDomainItemProvider.class);
		supportedTypes.add(IStructuredItemContentProvider.class);
		supportedTypes.add(ITreeItemContentProvider.class);
		supportedTypes.add(IItemLabelProvider.class);
		supportedTypes.add(IItemPropertySource.class);
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.br_automation.buoat.xddeditor.XDD.AddInfoType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AddInfoTypeItemProvider addInfoTypeItemProvider;

	/**
	 * This creates an adapter for a {@link com.br_automation.buoat.xddeditor.XDD.AddInfoType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAddInfoTypeAdapter() {
		if (addInfoTypeItemProvider == null) {
			addInfoTypeItemProvider = new AddInfoTypeItemProvider(this);
		}

		return addInfoTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.br_automation.buoat.xddeditor.XDD.ArrayType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ArrayTypeItemProvider arrayTypeItemProvider;

	/**
	 * This creates an adapter for a {@link com.br_automation.buoat.xddeditor.XDD.ArrayType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createArrayTypeAdapter() {
		if (arrayTypeItemProvider == null) {
			arrayTypeItemProvider = new ArrayTypeItemProvider(this);
		}

		return arrayTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.br_automation.buoat.xddeditor.XDD.CategoryType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CategoryTypeItemProvider categoryTypeItemProvider;

	/**
	 * This creates an adapter for a {@link com.br_automation.buoat.xddeditor.XDD.CategoryType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCategoryTypeAdapter() {
		if (categoryTypeItemProvider == null) {
			categoryTypeItemProvider = new CategoryTypeItemProvider(this);
		}

		return categoryTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.br_automation.buoat.xddeditor.XDD.CharacteristicContentType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CharacteristicContentTypeItemProvider characteristicContentTypeItemProvider;

	/**
	 * This creates an adapter for a {@link com.br_automation.buoat.xddeditor.XDD.CharacteristicContentType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCharacteristicContentTypeAdapter() {
		if (characteristicContentTypeItemProvider == null) {
			characteristicContentTypeItemProvider = new CharacteristicContentTypeItemProvider(this);
		}

		return characteristicContentTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.br_automation.buoat.xddeditor.XDD.CharacteristicNameType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CharacteristicNameTypeItemProvider characteristicNameTypeItemProvider;

	/**
	 * This creates an adapter for a {@link com.br_automation.buoat.xddeditor.XDD.CharacteristicNameType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCharacteristicNameTypeAdapter() {
		if (characteristicNameTypeItemProvider == null) {
			characteristicNameTypeItemProvider = new CharacteristicNameTypeItemProvider(this);
		}

		return characteristicNameTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.br_automation.buoat.xddeditor.XDD.CharacteristicsListType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CharacteristicsListTypeItemProvider characteristicsListTypeItemProvider;

	/**
	 * This creates an adapter for a {@link com.br_automation.buoat.xddeditor.XDD.CharacteristicsListType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCharacteristicsListTypeAdapter() {
		if (characteristicsListTypeItemProvider == null) {
			characteristicsListTypeItemProvider = new CharacteristicsListTypeItemProvider(this);
		}

		return characteristicsListTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.br_automation.buoat.xddeditor.XDD.CharacteristicType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CharacteristicTypeItemProvider characteristicTypeItemProvider;

	/**
	 * This creates an adapter for a {@link com.br_automation.buoat.xddeditor.XDD.CharacteristicType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCharacteristicTypeAdapter() {
		if (characteristicTypeItemProvider == null) {
			characteristicTypeItemProvider = new CharacteristicTypeItemProvider(this);
		}

		return characteristicTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.br_automation.buoat.xddeditor.XDD.CompliantWithType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CompliantWithTypeItemProvider compliantWithTypeItemProvider;

	/**
	 * This creates an adapter for a {@link com.br_automation.buoat.xddeditor.XDD.CompliantWithType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCompliantWithTypeAdapter() {
		if (compliantWithTypeItemProvider == null) {
			compliantWithTypeItemProvider = new CompliantWithTypeItemProvider(this);
		}

		return compliantWithTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.br_automation.buoat.xddeditor.XDD.ConfigVarsType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ConfigVarsTypeItemProvider configVarsTypeItemProvider;

	/**
	 * This creates an adapter for a {@link com.br_automation.buoat.xddeditor.XDD.ConfigVarsType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createConfigVarsTypeAdapter() {
		if (configVarsTypeItemProvider == null) {
			configVarsTypeItemProvider = new ConfigVarsTypeItemProvider(this);
		}

		return configVarsTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.br_automation.buoat.xddeditor.XDD.ConnectionType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ConnectionTypeItemProvider connectionTypeItemProvider;

	/**
	 * This creates an adapter for a {@link com.br_automation.buoat.xddeditor.XDD.ConnectionType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createConnectionTypeAdapter() {
		if (connectionTypeItemProvider == null) {
			connectionTypeItemProvider = new ConnectionTypeItemProvider(this);
		}

		return connectionTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.br_automation.buoat.xddeditor.XDD.ConnectorType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ConnectorTypeItemProvider connectorTypeItemProvider;

	/**
	 * This creates an adapter for a {@link com.br_automation.buoat.xddeditor.XDD.ConnectorType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createConnectorTypeAdapter() {
		if (connectorTypeItemProvider == null) {
			connectorTypeItemProvider = new ConnectorTypeItemProvider(this);
		}

		return connectorTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.br_automation.buoat.xddeditor.XDD.DataTypeListType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DataTypeListTypeItemProvider dataTypeListTypeItemProvider;

	/**
	 * This creates an adapter for a {@link com.br_automation.buoat.xddeditor.XDD.DataTypeListType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDataTypeListTypeAdapter() {
		if (dataTypeListTypeItemProvider == null) {
			dataTypeListTypeItemProvider = new DataTypeListTypeItemProvider(this);
		}

		return dataTypeListTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.br_automation.buoat.xddeditor.XDD.DerivedType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DerivedTypeItemProvider derivedTypeItemProvider;

	/**
	 * This creates an adapter for a {@link com.br_automation.buoat.xddeditor.XDD.DerivedType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDerivedTypeAdapter() {
		if (derivedTypeItemProvider == null) {
			derivedTypeItemProvider = new DerivedTypeItemProvider(this);
		}

		return derivedTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.br_automation.buoat.xddeditor.XDD.DescriptionRefType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DescriptionRefTypeItemProvider descriptionRefTypeItemProvider;

	/**
	 * This creates an adapter for a {@link com.br_automation.buoat.xddeditor.XDD.DescriptionRefType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDescriptionRefTypeAdapter() {
		if (descriptionRefTypeItemProvider == null) {
			descriptionRefTypeItemProvider = new DescriptionRefTypeItemProvider(this);
		}

		return descriptionRefTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.br_automation.buoat.xddeditor.XDD.DescriptionType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DescriptionTypeItemProvider descriptionTypeItemProvider;

	/**
	 * This creates an adapter for a {@link com.br_automation.buoat.xddeditor.XDD.DescriptionType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDescriptionTypeAdapter() {
		if (descriptionTypeItemProvider == null) {
			descriptionTypeItemProvider = new DescriptionTypeItemProvider(this);
		}

		return descriptionTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.br_automation.buoat.xddeditor.XDD.DictionaryType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DictionaryTypeItemProvider dictionaryTypeItemProvider;

	/**
	 * This creates an adapter for a {@link com.br_automation.buoat.xddeditor.XDD.DictionaryType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDictionaryTypeAdapter() {
		if (dictionaryTypeItemProvider == null) {
			dictionaryTypeItemProvider = new DictionaryTypeItemProvider(this);
		}

		return dictionaryTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.br_automation.buoat.xddeditor.XDD.DocumentRoot} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DocumentRootItemProvider documentRootItemProvider;

	/**
	 * This creates an adapter for a {@link com.br_automation.buoat.xddeditor.XDD.DocumentRoot}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDocumentRootAdapter() {
		if (documentRootItemProvider == null) {
			documentRootItemProvider = new DocumentRootItemProvider(this);
		}

		return documentRootItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.br_automation.buoat.xddeditor.XDD.DynamicChannelsType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DynamicChannelsTypeItemProvider dynamicChannelsTypeItemProvider;

	/**
	 * This creates an adapter for a {@link com.br_automation.buoat.xddeditor.XDD.DynamicChannelsType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDynamicChannelsTypeAdapter() {
		if (dynamicChannelsTypeItemProvider == null) {
			dynamicChannelsTypeItemProvider = new DynamicChannelsTypeItemProvider(this);
		}

		return dynamicChannelsTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.br_automation.buoat.xddeditor.XDD.EnumType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EnumTypeItemProvider enumTypeItemProvider;

	/**
	 * This creates an adapter for a {@link com.br_automation.buoat.xddeditor.XDD.EnumType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEnumTypeAdapter() {
		if (enumTypeItemProvider == null) {
			enumTypeItemProvider = new EnumTypeItemProvider(this);
		}

		return enumTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.br_automation.buoat.xddeditor.XDD.ErrorBitDataType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ErrorBitDataTypeItemProvider errorBitDataTypeItemProvider;

	/**
	 * This creates an adapter for a {@link com.br_automation.buoat.xddeditor.XDD.ErrorBitDataType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createErrorBitDataTypeAdapter() {
		if (errorBitDataTypeItemProvider == null) {
			errorBitDataTypeItemProvider = new ErrorBitDataTypeItemProvider(this);
		}

		return errorBitDataTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.br_automation.buoat.xddeditor.XDD.ErrorConstantDataType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ErrorConstantDataTypeItemProvider errorConstantDataTypeItemProvider;

	/**
	 * This creates an adapter for a {@link com.br_automation.buoat.xddeditor.XDD.ErrorConstantDataType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createErrorConstantDataTypeAdapter() {
		if (errorConstantDataTypeItemProvider == null) {
			errorConstantDataTypeItemProvider = new ErrorConstantDataTypeItemProvider(this);
		}

		return errorConstantDataTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.br_automation.buoat.xddeditor.XDD.ErrorListType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ErrorListTypeItemProvider errorListTypeItemProvider;

	/**
	 * This creates an adapter for a {@link com.br_automation.buoat.xddeditor.XDD.ErrorListType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createErrorListTypeAdapter() {
		if (errorListTypeItemProvider == null) {
			errorListTypeItemProvider = new ErrorListTypeItemProvider(this);
		}

		return errorListTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.br_automation.buoat.xddeditor.XDD.FileType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected FileTypeItemProvider fileTypeItemProvider;

	/**
	 * This creates an adapter for a {@link com.br_automation.buoat.xddeditor.XDD.FileType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createFileTypeAdapter() {
		if (fileTypeItemProvider == null) {
			fileTypeItemProvider = new FileTypeItemProvider(this);
		}

		return fileTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.br_automation.buoat.xddeditor.XDD.FirmwareType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected FirmwareTypeItemProvider firmwareTypeItemProvider;

	/**
	 * This creates an adapter for a {@link com.br_automation.buoat.xddeditor.XDD.FirmwareType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createFirmwareTypeAdapter() {
		if (firmwareTypeItemProvider == null) {
			firmwareTypeItemProvider = new FirmwareTypeItemProvider(this);
		}

		return firmwareTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.br_automation.buoat.xddeditor.XDD.FunctionInstanceType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected FunctionInstanceTypeItemProvider functionInstanceTypeItemProvider;

	/**
	 * This creates an adapter for a {@link com.br_automation.buoat.xddeditor.XDD.FunctionInstanceType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createFunctionInstanceTypeAdapter() {
		if (functionInstanceTypeItemProvider == null) {
			functionInstanceTypeItemProvider = new FunctionInstanceTypeItemProvider(this);
		}

		return functionInstanceTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.br_automation.buoat.xddeditor.XDD.FunctionTypeType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected FunctionTypeTypeItemProvider functionTypeTypeItemProvider;

	/**
	 * This creates an adapter for a {@link com.br_automation.buoat.xddeditor.XDD.FunctionTypeType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createFunctionTypeTypeAdapter() {
		if (functionTypeTypeItemProvider == null) {
			functionTypeTypeItemProvider = new FunctionTypeTypeItemProvider(this);
		}

		return functionTypeTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.br_automation.buoat.xddeditor.XDD.IdentityType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IdentityTypeItemProvider identityTypeItemProvider;

	/**
	 * This creates an adapter for a {@link com.br_automation.buoat.xddeditor.XDD.IdentityType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createIdentityTypeAdapter() {
		if (identityTypeItemProvider == null) {
			identityTypeItemProvider = new IdentityTypeItemProvider(this);
		}

		return identityTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.br_automation.buoat.xddeditor.XDD.InputVarsType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected InputVarsTypeItemProvider inputVarsTypeItemProvider;

	/**
	 * This creates an adapter for a {@link com.br_automation.buoat.xddeditor.XDD.InputVarsType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createInputVarsTypeAdapter() {
		if (inputVarsTypeItemProvider == null) {
			inputVarsTypeItemProvider = new InputVarsTypeItemProvider(this);
		}

		return inputVarsTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.br_automation.buoat.xddeditor.XDD.InstanceIDRefType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected InstanceIDRefTypeItemProvider instanceIDRefTypeItemProvider;

	/**
	 * This creates an adapter for a {@link com.br_automation.buoat.xddeditor.XDD.InstanceIDRefType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createInstanceIDRefTypeAdapter() {
		if (instanceIDRefTypeItemProvider == null) {
			instanceIDRefTypeItemProvider = new InstanceIDRefTypeItemProvider(this);
		}

		return instanceIDRefTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.br_automation.buoat.xddeditor.XDD.InstanceNameType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected InstanceNameTypeItemProvider instanceNameTypeItemProvider;

	/**
	 * This creates an adapter for a {@link com.br_automation.buoat.xddeditor.XDD.InstanceNameType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createInstanceNameTypeAdapter() {
		if (instanceNameTypeItemProvider == null) {
			instanceNameTypeItemProvider = new InstanceNameTypeItemProvider(this);
		}

		return instanceNameTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.br_automation.buoat.xddeditor.XDD.InterfaceListType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected InterfaceListTypeItemProvider interfaceListTypeItemProvider;

	/**
	 * This creates an adapter for a {@link com.br_automation.buoat.xddeditor.XDD.InterfaceListType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createInterfaceListTypeAdapter() {
		if (interfaceListTypeItemProvider == null) {
			interfaceListTypeItemProvider = new InterfaceListTypeItemProvider(this);
		}

		return interfaceListTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.br_automation.buoat.xddeditor.XDD.ISO15745ProfileContainerType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ISO15745ProfileContainerTypeItemProvider iso15745ProfileContainerTypeItemProvider;

	/**
	 * This creates an adapter for a {@link com.br_automation.buoat.xddeditor.XDD.ISO15745ProfileContainerType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createISO15745ProfileContainerTypeAdapter() {
		if (iso15745ProfileContainerTypeItemProvider == null) {
			iso15745ProfileContainerTypeItemProvider = new ISO15745ProfileContainerTypeItemProvider(this);
		}

		return iso15745ProfileContainerTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.br_automation.buoat.xddeditor.XDD.ISO15745ProfileType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ISO15745ProfileTypeItemProvider iso15745ProfileTypeItemProvider;

	/**
	 * This creates an adapter for a {@link com.br_automation.buoat.xddeditor.XDD.ISO15745ProfileType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createISO15745ProfileTypeAdapter() {
		if (iso15745ProfileTypeItemProvider == null) {
			iso15745ProfileTypeItemProvider = new ISO15745ProfileTypeItemProvider(this);
		}

		return iso15745ProfileTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.br_automation.buoat.xddeditor.XDD.ISO15745ReferenceDataType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ISO15745ReferenceDataTypeItemProvider iso15745ReferenceDataTypeItemProvider;

	/**
	 * This creates an adapter for a {@link com.br_automation.buoat.xddeditor.XDD.ISO15745ReferenceDataType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createISO15745ReferenceDataTypeAdapter() {
		if (iso15745ReferenceDataTypeItemProvider == null) {
			iso15745ReferenceDataTypeItemProvider = new ISO15745ReferenceDataTypeItemProvider(this);
		}

		return iso15745ReferenceDataTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.br_automation.buoat.xddeditor.XDD.LabelRefType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LabelRefTypeItemProvider labelRefTypeItemProvider;

	/**
	 * This creates an adapter for a {@link com.br_automation.buoat.xddeditor.XDD.LabelRefType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLabelRefTypeAdapter() {
		if (labelRefTypeItemProvider == null) {
			labelRefTypeItemProvider = new LabelRefTypeItemProvider(this);
		}

		return labelRefTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.br_automation.buoat.xddeditor.XDD.LabelType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LabelTypeItemProvider labelTypeItemProvider;

	/**
	 * This creates an adapter for a {@link com.br_automation.buoat.xddeditor.XDD.LabelType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLabelTypeAdapter() {
		if (labelTypeItemProvider == null) {
			labelTypeItemProvider = new LabelTypeItemProvider(this);
		}

		return labelTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.br_automation.buoat.xddeditor.XDD.LEDListType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LEDListTypeItemProvider ledListTypeItemProvider;

	/**
	 * This creates an adapter for a {@link com.br_automation.buoat.xddeditor.XDD.LEDListType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLEDListTypeAdapter() {
		if (ledListTypeItemProvider == null) {
			ledListTypeItemProvider = new LEDListTypeItemProvider(this);
		}

		return ledListTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.br_automation.buoat.xddeditor.XDD.LEDstateRefType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LEDstateRefTypeItemProvider leDstateRefTypeItemProvider;

	/**
	 * This creates an adapter for a {@link com.br_automation.buoat.xddeditor.XDD.LEDstateRefType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLEDstateRefTypeAdapter() {
		if (leDstateRefTypeItemProvider == null) {
			leDstateRefTypeItemProvider = new LEDstateRefTypeItemProvider(this);
		}

		return leDstateRefTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.br_automation.buoat.xddeditor.XDD.LEDstateType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LEDstateTypeItemProvider leDstateTypeItemProvider;

	/**
	 * This creates an adapter for a {@link com.br_automation.buoat.xddeditor.XDD.LEDstateType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLEDstateTypeAdapter() {
		if (leDstateTypeItemProvider == null) {
			leDstateTypeItemProvider = new LEDstateTypeItemProvider(this);
		}

		return leDstateTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.br_automation.buoat.xddeditor.XDD.MaxValueType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MaxValueTypeItemProvider maxValueTypeItemProvider;

	/**
	 * This creates an adapter for a {@link com.br_automation.buoat.xddeditor.XDD.MaxValueType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMaxValueTypeAdapter() {
		if (maxValueTypeItemProvider == null) {
			maxValueTypeItemProvider = new MaxValueTypeItemProvider(this);
		}

		return maxValueTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.br_automation.buoat.xddeditor.XDD.MemberRefType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MemberRefTypeItemProvider memberRefTypeItemProvider;

	/**
	 * This creates an adapter for a {@link com.br_automation.buoat.xddeditor.XDD.MemberRefType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMemberRefTypeAdapter() {
		if (memberRefTypeItemProvider == null) {
			memberRefTypeItemProvider = new MemberRefTypeItemProvider(this);
		}

		return memberRefTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.br_automation.buoat.xddeditor.XDD.MinValueType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MinValueTypeItemProvider minValueTypeItemProvider;

	/**
	 * This creates an adapter for a {@link com.br_automation.buoat.xddeditor.XDD.MinValueType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMinValueTypeAdapter() {
		if (minValueTypeItemProvider == null) {
			minValueTypeItemProvider = new MinValueTypeItemProvider(this);
		}

		return minValueTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.br_automation.buoat.xddeditor.XDD.ObjectListType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ObjectListTypeItemProvider objectListTypeItemProvider;

	/**
	 * This creates an adapter for a {@link com.br_automation.buoat.xddeditor.XDD.ObjectListType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createObjectListTypeAdapter() {
		if (objectListTypeItemProvider == null) {
			objectListTypeItemProvider = new ObjectListTypeItemProvider(this);
		}

		return objectListTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.br_automation.buoat.xddeditor.XDD.OrderNumberType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected OrderNumberTypeItemProvider orderNumberTypeItemProvider;

	/**
	 * This creates an adapter for a {@link com.br_automation.buoat.xddeditor.XDD.OrderNumberType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createOrderNumberTypeAdapter() {
		if (orderNumberTypeItemProvider == null) {
			orderNumberTypeItemProvider = new OrderNumberTypeItemProvider(this);
		}

		return orderNumberTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.br_automation.buoat.xddeditor.XDD.OutputVarsType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected OutputVarsTypeItemProvider outputVarsTypeItemProvider;

	/**
	 * This creates an adapter for a {@link com.br_automation.buoat.xddeditor.XDD.OutputVarsType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createOutputVarsTypeAdapter() {
		if (outputVarsTypeItemProvider == null) {
			outputVarsTypeItemProvider = new OutputVarsTypeItemProvider(this);
		}

		return outputVarsTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.br_automation.buoat.xddeditor.XDD.ParameterRefType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ParameterRefTypeItemProvider parameterRefTypeItemProvider;

	/**
	 * This creates an adapter for a {@link com.br_automation.buoat.xddeditor.XDD.ParameterRefType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createParameterRefTypeAdapter() {
		if (parameterRefTypeItemProvider == null) {
			parameterRefTypeItemProvider = new ParameterRefTypeItemProvider(this);
		}

		return parameterRefTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.br_automation.buoat.xddeditor.XDD.ParameterType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ParameterTypeItemProvider parameterTypeItemProvider;

	/**
	 * This creates an adapter for a {@link com.br_automation.buoat.xddeditor.XDD.ParameterType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createParameterTypeAdapter() {
		if (parameterTypeItemProvider == null) {
			parameterTypeItemProvider = new ParameterTypeItemProvider(this);
		}

		return parameterTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.br_automation.buoat.xddeditor.XDD.PictureType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PictureTypeItemProvider pictureTypeItemProvider;

	/**
	 * This creates an adapter for a {@link com.br_automation.buoat.xddeditor.XDD.PictureType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPictureTypeAdapter() {
		if (pictureTypeItemProvider == null) {
			pictureTypeItemProvider = new PictureTypeItemProvider(this);
		}

		return pictureTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.br_automation.buoat.xddeditor.XDD.ProductFamilyType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ProductFamilyTypeItemProvider productFamilyTypeItemProvider;

	/**
	 * This creates an adapter for a {@link com.br_automation.buoat.xddeditor.XDD.ProductFamilyType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createProductFamilyTypeAdapter() {
		if (productFamilyTypeItemProvider == null) {
			productFamilyTypeItemProvider = new ProductFamilyTypeItemProvider(this);
		}

		return productFamilyTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.br_automation.buoat.xddeditor.XDD.ProductNameType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ProductNameTypeItemProvider productNameTypeItemProvider;

	/**
	 * This creates an adapter for a {@link com.br_automation.buoat.xddeditor.XDD.ProductNameType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createProductNameTypeAdapter() {
		if (productNameTypeItemProvider == null) {
			productNameTypeItemProvider = new ProductNameTypeItemProvider(this);
		}

		return productNameTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.br_automation.buoat.xddeditor.XDD.ProductTextType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ProductTextTypeItemProvider productTextTypeItemProvider;

	/**
	 * This creates an adapter for a {@link com.br_automation.buoat.xddeditor.XDD.ProductTextType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createProductTextTypeAdapter() {
		if (productTextTypeItemProvider == null) {
			productTextTypeItemProvider = new ProductTextTypeItemProvider(this);
		}

		return productTextTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.br_automation.buoat.xddeditor.XDD.ProfileBodyCommunicationNetworkPowerlink} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ProfileBodyCommunicationNetworkPowerlinkItemProvider profileBodyCommunicationNetworkPowerlinkItemProvider;

	/**
	 * This creates an adapter for a {@link com.br_automation.buoat.xddeditor.XDD.ProfileBodyCommunicationNetworkPowerlink}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createProfileBodyCommunicationNetworkPowerlinkAdapter() {
		if (profileBodyCommunicationNetworkPowerlinkItemProvider == null) {
			profileBodyCommunicationNetworkPowerlinkItemProvider = new ProfileBodyCommunicationNetworkPowerlinkItemProvider(this);
		}

		return profileBodyCommunicationNetworkPowerlinkItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.br_automation.buoat.xddeditor.XDD.ProfileBodyDevicePowerlink} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ProfileBodyDevicePowerlinkItemProvider profileBodyDevicePowerlinkItemProvider;

	/**
	 * This creates an adapter for a {@link com.br_automation.buoat.xddeditor.XDD.ProfileBodyDevicePowerlink}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createProfileBodyDevicePowerlinkAdapter() {
		if (profileBodyDevicePowerlinkItemProvider == null) {
			profileBodyDevicePowerlinkItemProvider = new ProfileBodyDevicePowerlinkItemProvider(this);
		}

		return profileBodyDevicePowerlinkItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.br_automation.buoat.xddeditor.XDD.ProfileHandleDataType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ProfileHandleDataTypeItemProvider profileHandleDataTypeItemProvider;

	/**
	 * This creates an adapter for a {@link com.br_automation.buoat.xddeditor.XDD.ProfileHandleDataType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createProfileHandleDataTypeAdapter() {
		if (profileHandleDataTypeItemProvider == null) {
			profileHandleDataTypeItemProvider = new ProfileHandleDataTypeItemProvider(this);
		}

		return profileHandleDataTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.br_automation.buoat.xddeditor.XDD.ProfileHeaderDataType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ProfileHeaderDataTypeItemProvider profileHeaderDataTypeItemProvider;

	/**
	 * This creates an adapter for a {@link com.br_automation.buoat.xddeditor.XDD.ProfileHeaderDataType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createProfileHeaderDataTypeAdapter() {
		if (profileHeaderDataTypeItemProvider == null) {
			profileHeaderDataTypeItemProvider = new ProfileHeaderDataTypeItemProvider(this);
		}

		return profileHeaderDataTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.br_automation.buoat.xddeditor.XDD.StandardComplianceListType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected StandardComplianceListTypeItemProvider standardComplianceListTypeItemProvider;

	/**
	 * This creates an adapter for a {@link com.br_automation.buoat.xddeditor.XDD.StandardComplianceListType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createStandardComplianceListTypeAdapter() {
		if (standardComplianceListTypeItemProvider == null) {
			standardComplianceListTypeItemProvider = new StandardComplianceListTypeItemProvider(this);
		}

		return standardComplianceListTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.br_automation.buoat.xddeditor.XDD.StaticErrorBitFieldType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected StaticErrorBitFieldTypeItemProvider staticErrorBitFieldTypeItemProvider;

	/**
	 * This creates an adapter for a {@link com.br_automation.buoat.xddeditor.XDD.StaticErrorBitFieldType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createStaticErrorBitFieldTypeAdapter() {
		if (staticErrorBitFieldTypeItemProvider == null) {
			staticErrorBitFieldTypeItemProvider = new StaticErrorBitFieldTypeItemProvider(this);
		}

		return staticErrorBitFieldTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.br_automation.buoat.xddeditor.XDD.StepType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected StepTypeItemProvider stepTypeItemProvider;

	/**
	 * This creates an adapter for a {@link com.br_automation.buoat.xddeditor.XDD.StepType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createStepTypeAdapter() {
		if (stepTypeItemProvider == null) {
			stepTypeItemProvider = new StepTypeItemProvider(this);
		}

		return stepTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.br_automation.buoat.xddeditor.XDD.StructType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected StructTypeItemProvider structTypeItemProvider;

	/**
	 * This creates an adapter for a {@link com.br_automation.buoat.xddeditor.XDD.StructType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createStructTypeAdapter() {
		if (structTypeItemProvider == null) {
			structTypeItemProvider = new StructTypeItemProvider(this);
		}

		return structTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.br_automation.buoat.xddeditor.XDD.SubObjectType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SubObjectTypeItemProvider subObjectTypeItemProvider;

	/**
	 * This creates an adapter for a {@link com.br_automation.buoat.xddeditor.XDD.SubObjectType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSubObjectTypeAdapter() {
		if (subObjectTypeItemProvider == null) {
			subObjectTypeItemProvider = new SubObjectTypeItemProvider(this);
		}

		return subObjectTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.br_automation.buoat.xddeditor.XDD.TAllowedValues} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TAllowedValuesItemProvider tAllowedValuesItemProvider;

	/**
	 * This creates an adapter for a {@link com.br_automation.buoat.xddeditor.XDD.TAllowedValues}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTAllowedValuesAdapter() {
		if (tAllowedValuesItemProvider == null) {
			tAllowedValuesItemProvider = new TAllowedValuesItemProvider(this);
		}

		return tAllowedValuesItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.br_automation.buoat.xddeditor.XDD.TAllowedValuesTemplate} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TAllowedValuesTemplateItemProvider tAllowedValuesTemplateItemProvider;

	/**
	 * This creates an adapter for a {@link com.br_automation.buoat.xddeditor.XDD.TAllowedValuesTemplate}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTAllowedValuesTemplateAdapter() {
		if (tAllowedValuesTemplateItemProvider == null) {
			tAllowedValuesTemplateItemProvider = new TAllowedValuesTemplateItemProvider(this);
		}

		return tAllowedValuesTemplateItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.br_automation.buoat.xddeditor.XDD.TApplicationLayers} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TApplicationLayersItemProvider tApplicationLayersItemProvider;

	/**
	 * This creates an adapter for a {@link com.br_automation.buoat.xddeditor.XDD.TApplicationLayers}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTApplicationLayersAdapter() {
		if (tApplicationLayersItemProvider == null) {
			tApplicationLayersItemProvider = new TApplicationLayersItemProvider(this);
		}

		return tApplicationLayersItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.br_automation.buoat.xddeditor.XDD.TApplicationProcess} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TApplicationProcessItemProvider tApplicationProcessItemProvider;

	/**
	 * This creates an adapter for a {@link com.br_automation.buoat.xddeditor.XDD.TApplicationProcess}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTApplicationProcessAdapter() {
		if (tApplicationProcessItemProvider == null) {
			tApplicationProcessItemProvider = new TApplicationProcessItemProvider(this);
		}

		return tApplicationProcessItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.br_automation.buoat.xddeditor.XDD.TCapabilities} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TCapabilitiesItemProvider tCapabilitiesItemProvider;

	/**
	 * This creates an adapter for a {@link com.br_automation.buoat.xddeditor.XDD.TCapabilities}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTCapabilitiesAdapter() {
		if (tCapabilitiesItemProvider == null) {
			tCapabilitiesItemProvider = new TCapabilitiesItemProvider(this);
		}

		return tCapabilitiesItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.br_automation.buoat.xddeditor.XDD.TClassificationList} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TClassificationListItemProvider tClassificationListItemProvider;

	/**
	 * This creates an adapter for a {@link com.br_automation.buoat.xddeditor.XDD.TClassificationList}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTClassificationListAdapter() {
		if (tClassificationListItemProvider == null) {
			tClassificationListItemProvider = new TClassificationListItemProvider(this);
		}

		return tClassificationListItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.br_automation.buoat.xddeditor.XDD.TCNFeatures} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TCNFeaturesItemProvider tcnFeaturesItemProvider;

	/**
	 * This creates an adapter for a {@link com.br_automation.buoat.xddeditor.XDD.TCNFeatures}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTCNFeaturesAdapter() {
		if (tcnFeaturesItemProvider == null) {
			tcnFeaturesItemProvider = new TCNFeaturesItemProvider(this);
		}

		return tcnFeaturesItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.br_automation.buoat.xddeditor.XDD.TCombinedState} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TCombinedStateItemProvider tCombinedStateItemProvider;

	/**
	 * This creates an adapter for a {@link com.br_automation.buoat.xddeditor.XDD.TCombinedState}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTCombinedStateAdapter() {
		if (tCombinedStateItemProvider == null) {
			tCombinedStateItemProvider = new TCombinedStateItemProvider(this);
		}

		return tCombinedStateItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.br_automation.buoat.xddeditor.XDD.TConditionalSupport} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TConditionalSupportItemProvider tConditionalSupportItemProvider;

	/**
	 * This creates an adapter for a {@link com.br_automation.buoat.xddeditor.XDD.TConditionalSupport}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTConditionalSupportAdapter() {
		if (tConditionalSupportItemProvider == null) {
			tConditionalSupportItemProvider = new TConditionalSupportItemProvider(this);
		}

		return tConditionalSupportItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.br_automation.buoat.xddeditor.XDD.TConnectorList} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TConnectorListItemProvider tConnectorListItemProvider;

	/**
	 * This creates an adapter for a {@link com.br_automation.buoat.xddeditor.XDD.TConnectorList}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTConnectorListAdapter() {
		if (tConnectorListItemProvider == null) {
			tConnectorListItemProvider = new TConnectorListItemProvider(this);
		}

		return tConnectorListItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.br_automation.buoat.xddeditor.XDD.TCount} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TCountItemProvider tCountItemProvider;

	/**
	 * This creates an adapter for a {@link com.br_automation.buoat.xddeditor.XDD.TCount}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTCountAdapter() {
		if (tCountItemProvider == null) {
			tCountItemProvider = new TCountItemProvider(this);
		}

		return tCountItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.br_automation.buoat.xddeditor.XDD.TDataTypeIDRef} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TDataTypeIDRefItemProvider tDataTypeIDRefItemProvider;

	/**
	 * This creates an adapter for a {@link com.br_automation.buoat.xddeditor.XDD.TDataTypeIDRef}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTDataTypeIDRefAdapter() {
		if (tDataTypeIDRefItemProvider == null) {
			tDataTypeIDRefItemProvider = new TDataTypeIDRefItemProvider(this);
		}

		return tDataTypeIDRefItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.br_automation.buoat.xddeditor.XDD.TDataTypeList} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TDataTypeListItemProvider tDataTypeListItemProvider;

	/**
	 * This creates an adapter for a {@link com.br_automation.buoat.xddeditor.XDD.TDataTypeList}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTDataTypeListAdapter() {
		if (tDataTypeListItemProvider == null) {
			tDataTypeListItemProvider = new TDataTypeListItemProvider(this);
		}

		return tDataTypeListItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.br_automation.buoat.xddeditor.XDD.TDataTypes} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TDataTypesItemProvider tDataTypesItemProvider;

	/**
	 * This creates an adapter for a {@link com.br_automation.buoat.xddeditor.XDD.TDataTypes}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTDataTypesAdapter() {
		if (tDataTypesItemProvider == null) {
			tDataTypesItemProvider = new TDataTypesItemProvider(this);
		}

		return tDataTypesItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.br_automation.buoat.xddeditor.XDD.TDenotation} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TDenotationItemProvider tDenotationItemProvider;

	/**
	 * This creates an adapter for a {@link com.br_automation.buoat.xddeditor.XDD.TDenotation}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTDenotationAdapter() {
		if (tDenotationItemProvider == null) {
			tDenotationItemProvider = new TDenotationItemProvider(this);
		}

		return tDenotationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.br_automation.buoat.xddeditor.XDD.TDeviceCommissioning} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TDeviceCommissioningItemProvider tDeviceCommissioningItemProvider;

	/**
	 * This creates an adapter for a {@link com.br_automation.buoat.xddeditor.XDD.TDeviceCommissioning}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTDeviceCommissioningAdapter() {
		if (tDeviceCommissioningItemProvider == null) {
			tDeviceCommissioningItemProvider = new TDeviceCommissioningItemProvider(this);
		}

		return tDeviceCommissioningItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.br_automation.buoat.xddeditor.XDD.TDeviceFamily} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TDeviceFamilyItemProvider tDeviceFamilyItemProvider;

	/**
	 * This creates an adapter for a {@link com.br_automation.buoat.xddeditor.XDD.TDeviceFamily}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTDeviceFamilyAdapter() {
		if (tDeviceFamilyItemProvider == null) {
			tDeviceFamilyItemProvider = new TDeviceFamilyItemProvider(this);
		}

		return tDeviceFamilyItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.br_automation.buoat.xddeditor.XDD.TDeviceFunction} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TDeviceFunctionItemProvider tDeviceFunctionItemProvider;

	/**
	 * This creates an adapter for a {@link com.br_automation.buoat.xddeditor.XDD.TDeviceFunction}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTDeviceFunctionAdapter() {
		if (tDeviceFunctionItemProvider == null) {
			tDeviceFunctionItemProvider = new TDeviceFunctionItemProvider(this);
		}

		return tDeviceFunctionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.br_automation.buoat.xddeditor.XDD.TDeviceIdentity} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TDeviceIdentityItemProvider tDeviceIdentityItemProvider;

	/**
	 * This creates an adapter for a {@link com.br_automation.buoat.xddeditor.XDD.TDeviceIdentity}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTDeviceIdentityAdapter() {
		if (tDeviceIdentityItemProvider == null) {
			tDeviceIdentityItemProvider = new TDeviceIdentityItemProvider(this);
		}

		return tDeviceIdentityItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.br_automation.buoat.xddeditor.XDD.TDeviceManager} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TDeviceManagerItemProvider tDeviceManagerItemProvider;

	/**
	 * This creates an adapter for a {@link com.br_automation.buoat.xddeditor.XDD.TDeviceManager}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTDeviceManagerAdapter() {
		if (tDeviceManagerItemProvider == null) {
			tDeviceManagerItemProvider = new TDeviceManagerItemProvider(this);
		}

		return tDeviceManagerItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.br_automation.buoat.xddeditor.XDD.TDiagnostic} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TDiagnosticItemProvider tDiagnosticItemProvider;

	/**
	 * This creates an adapter for a {@link com.br_automation.buoat.xddeditor.XDD.TDiagnostic}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTDiagnosticAdapter() {
		if (tDiagnosticItemProvider == null) {
			tDiagnosticItemProvider = new TDiagnosticItemProvider(this);
		}

		return tDiagnosticItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.br_automation.buoat.xddeditor.XDD.TDictionaryList} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TDictionaryListItemProvider tDictionaryListItemProvider;

	/**
	 * This creates an adapter for a {@link com.br_automation.buoat.xddeditor.XDD.TDictionaryList}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTDictionaryListAdapter() {
		if (tDictionaryListItemProvider == null) {
			tDictionaryListItemProvider = new TDictionaryListItemProvider(this);
		}

		return tDictionaryListItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.br_automation.buoat.xddeditor.XDD.TDynamicChannel} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TDynamicChannelItemProvider tDynamicChannelItemProvider;

	/**
	 * This creates an adapter for a {@link com.br_automation.buoat.xddeditor.XDD.TDynamicChannel}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTDynamicChannelAdapter() {
		if (tDynamicChannelItemProvider == null) {
			tDynamicChannelItemProvider = new TDynamicChannelItemProvider(this);
		}

		return tDynamicChannelItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.br_automation.buoat.xddeditor.XDD.TEnumValue} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TEnumValueItemProvider tEnumValueItemProvider;

	/**
	 * This creates an adapter for a {@link com.br_automation.buoat.xddeditor.XDD.TEnumValue}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTEnumValueAdapter() {
		if (tEnumValueItemProvider == null) {
			tEnumValueItemProvider = new TEnumValueItemProvider(this);
		}

		return tEnumValueItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.br_automation.buoat.xddeditor.XDD.TextEntryType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TextEntryTypeItemProvider textEntryTypeItemProvider;

	/**
	 * This creates an adapter for a {@link com.br_automation.buoat.xddeditor.XDD.TextEntryType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTextEntryTypeAdapter() {
		if (textEntryTypeItemProvider == null) {
			textEntryTypeItemProvider = new TextEntryTypeItemProvider(this);
		}

		return textEntryTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.br_automation.buoat.xddeditor.XDD.TextResourceType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TextResourceTypeItemProvider textResourceTypeItemProvider;

	/**
	 * This creates an adapter for a {@link com.br_automation.buoat.xddeditor.XDD.TextResourceType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTextResourceTypeAdapter() {
		if (textResourceTypeItemProvider == null) {
			textResourceTypeItemProvider = new TextResourceTypeItemProvider(this);
		}

		return textResourceTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.br_automation.buoat.xddeditor.XDD.TFirmwareList} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TFirmwareListItemProvider tFirmwareListItemProvider;

	/**
	 * This creates an adapter for a {@link com.br_automation.buoat.xddeditor.XDD.TFirmwareList}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTFirmwareListAdapter() {
		if (tFirmwareListItemProvider == null) {
			tFirmwareListItemProvider = new TFirmwareListItemProvider(this);
		}

		return tFirmwareListItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.br_automation.buoat.xddeditor.XDD.TFunctionInstanceList} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TFunctionInstanceListItemProvider tFunctionInstanceListItemProvider;

	/**
	 * This creates an adapter for a {@link com.br_automation.buoat.xddeditor.XDD.TFunctionInstanceList}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTFunctionInstanceListAdapter() {
		if (tFunctionInstanceListItemProvider == null) {
			tFunctionInstanceListItemProvider = new TFunctionInstanceListItemProvider(this);
		}

		return tFunctionInstanceListItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.br_automation.buoat.xddeditor.XDD.TFunctionTypeList} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TFunctionTypeListItemProvider tFunctionTypeListItemProvider;

	/**
	 * This creates an adapter for a {@link com.br_automation.buoat.xddeditor.XDD.TFunctionTypeList}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTFunctionTypeListAdapter() {
		if (tFunctionTypeListItemProvider == null) {
			tFunctionTypeListItemProvider = new TFunctionTypeListItemProvider(this);
		}

		return tFunctionTypeListItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.br_automation.buoat.xddeditor.XDD.TGeneralFeatures} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TGeneralFeaturesItemProvider tGeneralFeaturesItemProvider;

	/**
	 * This creates an adapter for a {@link com.br_automation.buoat.xddeditor.XDD.TGeneralFeatures}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTGeneralFeaturesAdapter() {
		if (tGeneralFeaturesItemProvider == null) {
			tGeneralFeaturesItemProvider = new TGeneralFeaturesItemProvider(this);
		}

		return tGeneralFeaturesItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.br_automation.buoat.xddeditor.XDD.TIndicatorList} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TIndicatorListItemProvider tIndicatorListItemProvider;

	/**
	 * This creates an adapter for a {@link com.br_automation.buoat.xddeditor.XDD.TIndicatorList}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTIndicatorListAdapter() {
		if (tIndicatorListItemProvider == null) {
			tIndicatorListItemProvider = new TIndicatorListItemProvider(this);
		}

		return tIndicatorListItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.br_automation.buoat.xddeditor.XDD.TLED} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TLEDItemProvider tledItemProvider;

	/**
	 * This creates an adapter for a {@link com.br_automation.buoat.xddeditor.XDD.TLED}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTLEDAdapter() {
		if (tledItemProvider == null) {
			tledItemProvider = new TLEDItemProvider(this);
		}

		return tledItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.br_automation.buoat.xddeditor.XDD.TMNFeatures} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TMNFeaturesItemProvider tmnFeaturesItemProvider;

	/**
	 * This creates an adapter for a {@link com.br_automation.buoat.xddeditor.XDD.TMNFeatures}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTMNFeaturesAdapter() {
		if (tmnFeaturesItemProvider == null) {
			tmnFeaturesItemProvider = new TMNFeaturesItemProvider(this);
		}

		return tmnFeaturesItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.br_automation.buoat.xddeditor.XDD.TNetworkManagement} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TNetworkManagementItemProvider tNetworkManagementItemProvider;

	/**
	 * This creates an adapter for a {@link com.br_automation.buoat.xddeditor.XDD.TNetworkManagement}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTNetworkManagementAdapter() {
		if (tNetworkManagementItemProvider == null) {
			tNetworkManagementItemProvider = new TNetworkManagementItemProvider(this);
		}

		return tNetworkManagementItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.br_automation.buoat.xddeditor.XDD.TObject} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TObjectItemProvider tObjectItemProvider;

	/**
	 * This creates an adapter for a {@link com.br_automation.buoat.xddeditor.XDD.TObject}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTObjectAdapter() {
		if (tObjectItemProvider == null) {
			tObjectItemProvider = new TObjectItemProvider(this);
		}

		return tObjectItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.br_automation.buoat.xddeditor.XDD.TParameterGroup} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TParameterGroupItemProvider tParameterGroupItemProvider;

	/**
	 * This creates an adapter for a {@link com.br_automation.buoat.xddeditor.XDD.TParameterGroup}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTParameterGroupAdapter() {
		if (tParameterGroupItemProvider == null) {
			tParameterGroupItemProvider = new TParameterGroupItemProvider(this);
		}

		return tParameterGroupItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.br_automation.buoat.xddeditor.XDD.TParameterGroupList} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TParameterGroupListItemProvider tParameterGroupListItemProvider;

	/**
	 * This creates an adapter for a {@link com.br_automation.buoat.xddeditor.XDD.TParameterGroupList}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTParameterGroupListAdapter() {
		if (tParameterGroupListItemProvider == null) {
			tParameterGroupListItemProvider = new TParameterGroupListItemProvider(this);
		}

		return tParameterGroupListItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.br_automation.buoat.xddeditor.XDD.TParameterList} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TParameterListItemProvider tParameterListItemProvider;

	/**
	 * This creates an adapter for a {@link com.br_automation.buoat.xddeditor.XDD.TParameterList}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTParameterListAdapter() {
		if (tParameterListItemProvider == null) {
			tParameterListItemProvider = new TParameterListItemProvider(this);
		}

		return tParameterListItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.br_automation.buoat.xddeditor.XDD.TParameterTemplate} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TParameterTemplateItemProvider tParameterTemplateItemProvider;

	/**
	 * This creates an adapter for a {@link com.br_automation.buoat.xddeditor.XDD.TParameterTemplate}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTParameterTemplateAdapter() {
		if (tParameterTemplateItemProvider == null) {
			tParameterTemplateItemProvider = new TParameterTemplateItemProvider(this);
		}

		return tParameterTemplateItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.br_automation.buoat.xddeditor.XDD.TPicturesList} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TPicturesListItemProvider tPicturesListItemProvider;

	/**
	 * This creates an adapter for a {@link com.br_automation.buoat.xddeditor.XDD.TPicturesList}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTPicturesListAdapter() {
		if (tPicturesListItemProvider == null) {
			tPicturesListItemProvider = new TPicturesListItemProvider(this);
		}

		return tPicturesListItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.br_automation.buoat.xddeditor.XDD.TProductID} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TProductIDItemProvider tProductIDItemProvider;

	/**
	 * This creates an adapter for a {@link com.br_automation.buoat.xddeditor.XDD.TProductID}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTProductIDAdapter() {
		if (tProductIDItemProvider == null) {
			tProductIDItemProvider = new TProductIDItemProvider(this);
		}

		return tProductIDItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.br_automation.buoat.xddeditor.XDD.TProperty} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TPropertyItemProvider tPropertyItemProvider;

	/**
	 * This creates an adapter for a {@link com.br_automation.buoat.xddeditor.XDD.TProperty}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTPropertyAdapter() {
		if (tPropertyItemProvider == null) {
			tPropertyItemProvider = new TPropertyItemProvider(this);
		}

		return tPropertyItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.br_automation.buoat.xddeditor.XDD.TRange} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TRangeItemProvider tRangeItemProvider;

	/**
	 * This creates an adapter for a {@link com.br_automation.buoat.xddeditor.XDD.TRange}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTRangeAdapter() {
		if (tRangeItemProvider == null) {
			tRangeItemProvider = new TRangeItemProvider(this);
		}

		return tRangeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.br_automation.buoat.xddeditor.XDD.TSpecificationRevision} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TSpecificationRevisionItemProvider tSpecificationRevisionItemProvider;

	/**
	 * This creates an adapter for a {@link com.br_automation.buoat.xddeditor.XDD.TSpecificationRevision}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTSpecificationRevisionAdapter() {
		if (tSpecificationRevisionItemProvider == null) {
			tSpecificationRevisionItemProvider = new TSpecificationRevisionItemProvider(this);
		}

		return tSpecificationRevisionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.br_automation.buoat.xddeditor.XDD.TSubrange} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TSubrangeItemProvider tSubrangeItemProvider;

	/**
	 * This creates an adapter for a {@link com.br_automation.buoat.xddeditor.XDD.TSubrange}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTSubrangeAdapter() {
		if (tSubrangeItemProvider == null) {
			tSubrangeItemProvider = new TSubrangeItemProvider(this);
		}

		return tSubrangeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.br_automation.buoat.xddeditor.XDD.TTemplateList} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TTemplateListItemProvider tTemplateListItemProvider;

	/**
	 * This creates an adapter for a {@link com.br_automation.buoat.xddeditor.XDD.TTemplateList}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTTemplateListAdapter() {
		if (tTemplateListItemProvider == null) {
			tTemplateListItemProvider = new TTemplateListItemProvider(this);
		}

		return tTemplateListItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.br_automation.buoat.xddeditor.XDD.TUnit} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TUnitItemProvider tUnitItemProvider;

	/**
	 * This creates an adapter for a {@link com.br_automation.buoat.xddeditor.XDD.TUnit}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTUnitAdapter() {
		if (tUnitItemProvider == null) {
			tUnitItemProvider = new TUnitItemProvider(this);
		}

		return tUnitItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.br_automation.buoat.xddeditor.XDD.TValue} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TValueItemProvider tValueItemProvider;

	/**
	 * This creates an adapter for a {@link com.br_automation.buoat.xddeditor.XDD.TValue}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTValueAdapter() {
		if (tValueItemProvider == null) {
			tValueItemProvider = new TValueItemProvider(this);
		}

		return tValueItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.br_automation.buoat.xddeditor.XDD.TVarDeclaration} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TVarDeclarationItemProvider tVarDeclarationItemProvider;

	/**
	 * This creates an adapter for a {@link com.br_automation.buoat.xddeditor.XDD.TVarDeclaration}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTVarDeclarationAdapter() {
		if (tVarDeclarationItemProvider == null) {
			tVarDeclarationItemProvider = new TVarDeclarationItemProvider(this);
		}

		return tVarDeclarationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.br_automation.buoat.xddeditor.XDD.TVariableRef} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TVariableRefItemProvider tVariableRefItemProvider;

	/**
	 * This creates an adapter for a {@link com.br_automation.buoat.xddeditor.XDD.TVariableRef}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTVariableRefAdapter() {
		if (tVariableRefItemProvider == null) {
			tVariableRefItemProvider = new TVariableRefItemProvider(this);
		}

		return tVariableRefItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.br_automation.buoat.xddeditor.XDD.TVendorID} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TVendorIDItemProvider tVendorIDItemProvider;

	/**
	 * This creates an adapter for a {@link com.br_automation.buoat.xddeditor.XDD.TVendorID}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTVendorIDAdapter() {
		if (tVendorIDItemProvider == null) {
			tVendorIDItemProvider = new TVendorIDItemProvider(this);
		}

		return tVendorIDItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.br_automation.buoat.xddeditor.XDD.TVersion} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TVersionItemProvider tVersionItemProvider;

	/**
	 * This creates an adapter for a {@link com.br_automation.buoat.xddeditor.XDD.TVersion}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTVersionAdapter() {
		if (tVersionItemProvider == null) {
			tVersionItemProvider = new TVersionItemProvider(this);
		}

		return tVersionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.br_automation.buoat.xddeditor.XDD.ValueType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ValueTypeItemProvider valueTypeItemProvider;

	/**
	 * This creates an adapter for a {@link com.br_automation.buoat.xddeditor.XDD.ValueType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createValueTypeAdapter() {
		if (valueTypeItemProvider == null) {
			valueTypeItemProvider = new ValueTypeItemProvider(this);
		}

		return valueTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.br_automation.buoat.xddeditor.XDD.VariableIDRefType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected VariableIDRefTypeItemProvider variableIDRefTypeItemProvider;

	/**
	 * This creates an adapter for a {@link com.br_automation.buoat.xddeditor.XDD.VariableIDRefType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createVariableIDRefTypeAdapter() {
		if (variableIDRefTypeItemProvider == null) {
			variableIDRefTypeItemProvider = new VariableIDRefTypeItemProvider(this);
		}

		return variableIDRefTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.br_automation.buoat.xddeditor.XDD.VendorNameType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected VendorNameTypeItemProvider vendorNameTypeItemProvider;

	/**
	 * This creates an adapter for a {@link com.br_automation.buoat.xddeditor.XDD.VendorNameType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createVendorNameTypeAdapter() {
		if (vendorNameTypeItemProvider == null) {
			vendorNameTypeItemProvider = new VendorNameTypeItemProvider(this);
		}

		return vendorNameTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.br_automation.buoat.xddeditor.XDD.VendorTextType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected VendorTextTypeItemProvider vendorTextTypeItemProvider;

	/**
	 * This creates an adapter for a {@link com.br_automation.buoat.xddeditor.XDD.VendorTextType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createVendorTextTypeAdapter() {
		if (vendorTextTypeItemProvider == null) {
			vendorTextTypeItemProvider = new VendorTextTypeItemProvider(this);
		}

		return vendorTextTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.br_automation.buoat.xddeditor.XDD.VersionInfoType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected VersionInfoTypeItemProvider versionInfoTypeItemProvider;

	/**
	 * This creates an adapter for a {@link com.br_automation.buoat.xddeditor.XDD.VersionInfoType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createVersionInfoTypeAdapter() {
		if (versionInfoTypeItemProvider == null) {
			versionInfoTypeItemProvider = new VersionInfoTypeItemProvider(this);
		}

		return versionInfoTypeItemProvider;
	}

	/**
	 * This returns the root adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public ComposeableAdapterFactory getRootAdapterFactory() {
		return parentAdapterFactory == null ? this : parentAdapterFactory.getRootAdapterFactory();
	}

	/**
	 * This sets the composed adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void setParentAdapterFactory(ComposedAdapterFactory parentAdapterFactory) {
		this.parentAdapterFactory = parentAdapterFactory;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public boolean isFactoryForType(Object type) {
		return supportedTypes.contains(type) || super.isFactoryForType(type);
	}

	/**
	 * This implementation substitutes the factory itself as the key for the adapter.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter adapt(Notifier notifier, Object type) {
		return super.adapt(notifier, this);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Object adapt(Object object, Object type) {
		if (isFactoryForType(type)) {
			Object adapter = super.adapt(object, type);
			if (!(type instanceof Class<?>) || (((Class<?>)type).isInstance(adapter))) {
				return adapter;
			}
		}

		return null;
	}

	/**
	 * This adds a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void addListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.addListener(notifyChangedListener);
	}

	/**
	 * This removes a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void removeListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.removeListener(notifyChangedListener);
	}

	/**
	 * This delegates to {@link #changeNotifier} and to {@link #parentAdapterFactory}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void fireNotifyChanged(Notification notification) {
		changeNotifier.fireNotifyChanged(notification);

		if (parentAdapterFactory != null) {
			parentAdapterFactory.fireNotifyChanged(notification);
		}
	}

	/**
	 * This disposes all of the item providers created by this factory. 
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void dispose() {
		if (addInfoTypeItemProvider != null) addInfoTypeItemProvider.dispose();
		if (arrayTypeItemProvider != null) arrayTypeItemProvider.dispose();
		if (categoryTypeItemProvider != null) categoryTypeItemProvider.dispose();
		if (characteristicContentTypeItemProvider != null) characteristicContentTypeItemProvider.dispose();
		if (characteristicNameTypeItemProvider != null) characteristicNameTypeItemProvider.dispose();
		if (characteristicsListTypeItemProvider != null) characteristicsListTypeItemProvider.dispose();
		if (characteristicTypeItemProvider != null) characteristicTypeItemProvider.dispose();
		if (compliantWithTypeItemProvider != null) compliantWithTypeItemProvider.dispose();
		if (configVarsTypeItemProvider != null) configVarsTypeItemProvider.dispose();
		if (connectionTypeItemProvider != null) connectionTypeItemProvider.dispose();
		if (connectorTypeItemProvider != null) connectorTypeItemProvider.dispose();
		if (dataTypeListTypeItemProvider != null) dataTypeListTypeItemProvider.dispose();
		if (derivedTypeItemProvider != null) derivedTypeItemProvider.dispose();
		if (descriptionRefTypeItemProvider != null) descriptionRefTypeItemProvider.dispose();
		if (descriptionTypeItemProvider != null) descriptionTypeItemProvider.dispose();
		if (dictionaryTypeItemProvider != null) dictionaryTypeItemProvider.dispose();
		if (documentRootItemProvider != null) documentRootItemProvider.dispose();
		if (dynamicChannelsTypeItemProvider != null) dynamicChannelsTypeItemProvider.dispose();
		if (enumTypeItemProvider != null) enumTypeItemProvider.dispose();
		if (errorBitDataTypeItemProvider != null) errorBitDataTypeItemProvider.dispose();
		if (errorConstantDataTypeItemProvider != null) errorConstantDataTypeItemProvider.dispose();
		if (errorListTypeItemProvider != null) errorListTypeItemProvider.dispose();
		if (fileTypeItemProvider != null) fileTypeItemProvider.dispose();
		if (firmwareTypeItemProvider != null) firmwareTypeItemProvider.dispose();
		if (functionInstanceTypeItemProvider != null) functionInstanceTypeItemProvider.dispose();
		if (functionTypeTypeItemProvider != null) functionTypeTypeItemProvider.dispose();
		if (identityTypeItemProvider != null) identityTypeItemProvider.dispose();
		if (inputVarsTypeItemProvider != null) inputVarsTypeItemProvider.dispose();
		if (instanceIDRefTypeItemProvider != null) instanceIDRefTypeItemProvider.dispose();
		if (instanceNameTypeItemProvider != null) instanceNameTypeItemProvider.dispose();
		if (interfaceListTypeItemProvider != null) interfaceListTypeItemProvider.dispose();
		if (iso15745ProfileContainerTypeItemProvider != null) iso15745ProfileContainerTypeItemProvider.dispose();
		if (iso15745ProfileTypeItemProvider != null) iso15745ProfileTypeItemProvider.dispose();
		if (iso15745ReferenceDataTypeItemProvider != null) iso15745ReferenceDataTypeItemProvider.dispose();
		if (labelRefTypeItemProvider != null) labelRefTypeItemProvider.dispose();
		if (labelTypeItemProvider != null) labelTypeItemProvider.dispose();
		if (ledListTypeItemProvider != null) ledListTypeItemProvider.dispose();
		if (leDstateRefTypeItemProvider != null) leDstateRefTypeItemProvider.dispose();
		if (leDstateTypeItemProvider != null) leDstateTypeItemProvider.dispose();
		if (maxValueTypeItemProvider != null) maxValueTypeItemProvider.dispose();
		if (memberRefTypeItemProvider != null) memberRefTypeItemProvider.dispose();
		if (minValueTypeItemProvider != null) minValueTypeItemProvider.dispose();
		if (objectListTypeItemProvider != null) objectListTypeItemProvider.dispose();
		if (orderNumberTypeItemProvider != null) orderNumberTypeItemProvider.dispose();
		if (outputVarsTypeItemProvider != null) outputVarsTypeItemProvider.dispose();
		if (parameterRefTypeItemProvider != null) parameterRefTypeItemProvider.dispose();
		if (parameterTypeItemProvider != null) parameterTypeItemProvider.dispose();
		if (pictureTypeItemProvider != null) pictureTypeItemProvider.dispose();
		if (productFamilyTypeItemProvider != null) productFamilyTypeItemProvider.dispose();
		if (productNameTypeItemProvider != null) productNameTypeItemProvider.dispose();
		if (productTextTypeItemProvider != null) productTextTypeItemProvider.dispose();
		if (profileBodyCommunicationNetworkPowerlinkItemProvider != null) profileBodyCommunicationNetworkPowerlinkItemProvider.dispose();
		if (profileBodyDevicePowerlinkItemProvider != null) profileBodyDevicePowerlinkItemProvider.dispose();
		if (profileHandleDataTypeItemProvider != null) profileHandleDataTypeItemProvider.dispose();
		if (profileHeaderDataTypeItemProvider != null) profileHeaderDataTypeItemProvider.dispose();
		if (standardComplianceListTypeItemProvider != null) standardComplianceListTypeItemProvider.dispose();
		if (staticErrorBitFieldTypeItemProvider != null) staticErrorBitFieldTypeItemProvider.dispose();
		if (stepTypeItemProvider != null) stepTypeItemProvider.dispose();
		if (structTypeItemProvider != null) structTypeItemProvider.dispose();
		if (subObjectTypeItemProvider != null) subObjectTypeItemProvider.dispose();
		if (tAllowedValuesItemProvider != null) tAllowedValuesItemProvider.dispose();
		if (tAllowedValuesTemplateItemProvider != null) tAllowedValuesTemplateItemProvider.dispose();
		if (tApplicationLayersItemProvider != null) tApplicationLayersItemProvider.dispose();
		if (tApplicationProcessItemProvider != null) tApplicationProcessItemProvider.dispose();
		if (tCapabilitiesItemProvider != null) tCapabilitiesItemProvider.dispose();
		if (tClassificationListItemProvider != null) tClassificationListItemProvider.dispose();
		if (tcnFeaturesItemProvider != null) tcnFeaturesItemProvider.dispose();
		if (tCombinedStateItemProvider != null) tCombinedStateItemProvider.dispose();
		if (tConditionalSupportItemProvider != null) tConditionalSupportItemProvider.dispose();
		if (tConnectorListItemProvider != null) tConnectorListItemProvider.dispose();
		if (tCountItemProvider != null) tCountItemProvider.dispose();
		if (tDataTypeIDRefItemProvider != null) tDataTypeIDRefItemProvider.dispose();
		if (tDataTypeListItemProvider != null) tDataTypeListItemProvider.dispose();
		if (tDataTypesItemProvider != null) tDataTypesItemProvider.dispose();
		if (tDenotationItemProvider != null) tDenotationItemProvider.dispose();
		if (tDeviceCommissioningItemProvider != null) tDeviceCommissioningItemProvider.dispose();
		if (tDeviceFamilyItemProvider != null) tDeviceFamilyItemProvider.dispose();
		if (tDeviceFunctionItemProvider != null) tDeviceFunctionItemProvider.dispose();
		if (tDeviceIdentityItemProvider != null) tDeviceIdentityItemProvider.dispose();
		if (tDeviceManagerItemProvider != null) tDeviceManagerItemProvider.dispose();
		if (tDiagnosticItemProvider != null) tDiagnosticItemProvider.dispose();
		if (tDictionaryListItemProvider != null) tDictionaryListItemProvider.dispose();
		if (tDynamicChannelItemProvider != null) tDynamicChannelItemProvider.dispose();
		if (tEnumValueItemProvider != null) tEnumValueItemProvider.dispose();
		if (textEntryTypeItemProvider != null) textEntryTypeItemProvider.dispose();
		if (textResourceTypeItemProvider != null) textResourceTypeItemProvider.dispose();
		if (tFirmwareListItemProvider != null) tFirmwareListItemProvider.dispose();
		if (tFunctionInstanceListItemProvider != null) tFunctionInstanceListItemProvider.dispose();
		if (tFunctionTypeListItemProvider != null) tFunctionTypeListItemProvider.dispose();
		if (tGeneralFeaturesItemProvider != null) tGeneralFeaturesItemProvider.dispose();
		if (tIndicatorListItemProvider != null) tIndicatorListItemProvider.dispose();
		if (tledItemProvider != null) tledItemProvider.dispose();
		if (tmnFeaturesItemProvider != null) tmnFeaturesItemProvider.dispose();
		if (tNetworkManagementItemProvider != null) tNetworkManagementItemProvider.dispose();
		if (tObjectItemProvider != null) tObjectItemProvider.dispose();
		if (tParameterGroupItemProvider != null) tParameterGroupItemProvider.dispose();
		if (tParameterGroupListItemProvider != null) tParameterGroupListItemProvider.dispose();
		if (tParameterListItemProvider != null) tParameterListItemProvider.dispose();
		if (tParameterTemplateItemProvider != null) tParameterTemplateItemProvider.dispose();
		if (tPicturesListItemProvider != null) tPicturesListItemProvider.dispose();
		if (tProductIDItemProvider != null) tProductIDItemProvider.dispose();
		if (tPropertyItemProvider != null) tPropertyItemProvider.dispose();
		if (tRangeItemProvider != null) tRangeItemProvider.dispose();
		if (tSpecificationRevisionItemProvider != null) tSpecificationRevisionItemProvider.dispose();
		if (tSubrangeItemProvider != null) tSubrangeItemProvider.dispose();
		if (tTemplateListItemProvider != null) tTemplateListItemProvider.dispose();
		if (tUnitItemProvider != null) tUnitItemProvider.dispose();
		if (tValueItemProvider != null) tValueItemProvider.dispose();
		if (tVarDeclarationItemProvider != null) tVarDeclarationItemProvider.dispose();
		if (tVariableRefItemProvider != null) tVariableRefItemProvider.dispose();
		if (tVendorIDItemProvider != null) tVendorIDItemProvider.dispose();
		if (tVersionItemProvider != null) tVersionItemProvider.dispose();
		if (valueTypeItemProvider != null) valueTypeItemProvider.dispose();
		if (variableIDRefTypeItemProvider != null) variableIDRefTypeItemProvider.dispose();
		if (vendorNameTypeItemProvider != null) vendorNameTypeItemProvider.dispose();
		if (vendorTextTypeItemProvider != null) vendorTextTypeItemProvider.dispose();
		if (versionInfoTypeItemProvider != null) versionInfoTypeItemProvider.dispose();
	}

}
